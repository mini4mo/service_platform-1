{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Desktop\\\\service_platform\\\\frontend\\\\src\\\\OrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GeoapifyGeocoderAutocomplete, GeoapifyContext } from '@geoapify/react-geocoder-autocomplete';\nimport '@geoapify/geocoder-autocomplete/styles/minimal.css';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderForm = ({\n  token\n}) => {\n  _s();\n  const [startLocation, setStartLocation] = useState('');\n  const [endLocation, setEndLocation] = useState('');\n  const [serviceType, setServiceType] = useState('taxi');\n  const [error, setError] = useState('');\n\n  // Подключение Socket.IO\n  useEffect(() => {\n    const socket = io('http://localhost:5000', {\n      transports: ['websocket', 'polling'] // Поддержка WebSocket и polling\n    });\n    socket.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n    });\n    socket.on('newOrder', order => {\n      console.log('New order received:', order);\n      alert(`New order: ${order.service_type} from ${order.start_location}`);\n    });\n    socket.on('connect_error', err => {\n      console.error('Socket.IO connection error:', err);\n      setError('Could not connect to real-time server');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const handleStartSelect = value => {\n    if (value && value.properties && value.properties.formatted) {\n      setStartLocation(value.properties.formatted);\n    } else {\n      setStartLocation('');\n    }\n  };\n  const handleEndSelect = value => {\n    if (value && value.properties && value.properties.formatted) {\n      setEndLocation(value.properties.formatted);\n    } else {\n      setEndLocation('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!startLocation || !endLocation) {\n      setError('Please select both start and end locations');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/orders', {\n        service_type: serviceType,\n        start_location: startLocation,\n        end_location: endLocation\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Order placed:', response.data);\n      setError('');\n      setStartLocation('');\n      setEndLocation('');\n      setServiceType('taxi');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error placing order');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GeoapifyContext, {\n    apiKey: process.env.REACT_APP_GEOAPIFY_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto p-4 bg-white rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Service Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: serviceType,\n            onChange: e => setServiceType(e.target.value),\n            className: \"w-full p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"taxi\",\n              children: \"Taxi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"food_delivery\",\n              children: \"Food Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GeoapifyGeocoderAutocomplete, {\n            placeSelect: handleStartSelect,\n            placeholder: \"Start Location\",\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GeoapifyGeocoderAutocomplete, {\n            placeSelect: handleEndSelect,\n            placeholder: \"End Location\",\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderForm, \"uWKe3PjADZsX+IpT8EBzQwkJdSQ=\");\n_c = OrderForm;\nexport default OrderForm;\nvar _c;\n$RefreshReg$(_c, \"OrderForm\");","map":{"version":3,"names":["React","useState","useEffect","GeoapifyGeocoderAutocomplete","GeoapifyContext","axios","io","jsxDEV","_jsxDEV","OrderForm","token","_s","startLocation","setStartLocation","endLocation","setEndLocation","serviceType","setServiceType","error","setError","socket","transports","on","console","log","order","alert","service_type","start_location","err","disconnect","handleStartSelect","value","properties","formatted","handleEndSelect","handleSubmit","e","preventDefault","response","post","end_location","headers","Authorization","data","_err$response","_err$response$data","apiKey","process","env","REACT_APP_GEOAPIFY_API_KEY","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","placeSelect","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Desktop/service_platform/frontend/src/OrderForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GeoapifyGeocoderAutocomplete, GeoapifyContext } from '@geoapify/react-geocoder-autocomplete';\r\nimport '@geoapify/geocoder-autocomplete/styles/minimal.css';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\n\r\nconst OrderForm = ({ token }) => {\r\n  const [startLocation, setStartLocation] = useState('');\r\n  const [endLocation, setEndLocation] = useState('');\r\n  const [serviceType, setServiceType] = useState('taxi');\r\n  const [error, setError] = useState('');\r\n\r\n  // Подключение Socket.IO\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:5000', {\r\n      transports: ['websocket', 'polling'], // Поддержка WebSocket и polling\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log('Connected to Socket.IO server');\r\n    });\r\n\r\n    socket.on('newOrder', (order) => {\r\n      console.log('New order received:', order);\r\n      alert(`New order: ${order.service_type} from ${order.start_location}`);\r\n    });\r\n\r\n    socket.on('connect_error', (err) => {\r\n      console.error('Socket.IO connection error:', err);\r\n      setError('Could not connect to real-time server');\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const handleStartSelect = (value) => {\r\n    if (value && value.properties && value.properties.formatted) {\r\n      setStartLocation(value.properties.formatted);\r\n    } else {\r\n      setStartLocation('');\r\n    }\r\n  };\r\n\r\n  const handleEndSelect = (value) => {\r\n    if (value && value.properties && value.properties.formatted) {\r\n      setEndLocation(value.properties.formatted);\r\n    } else {\r\n      setEndLocation('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!startLocation || !endLocation) {\r\n      setError('Please select both start and end locations');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/orders', {\r\n        service_type: serviceType,\r\n        start_location: startLocation,\r\n        end_location: endLocation\r\n      }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      console.log('Order placed:', response.data);\r\n      setError('');\r\n      setStartLocation('');\r\n      setEndLocation('');\r\n      setServiceType('taxi');\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Error placing order');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GeoapifyContext apiKey={process.env.REACT_APP_GEOAPIFY_API_KEY}>\r\n      <div className=\"max-w-md mx-auto p-4 bg-white rounded-lg shadow-md\">\r\n        <h2 className=\"text-xl font-bold mb-4\">Place Order</h2>\r\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label className=\"block mb-2\">Service Type</label>\r\n            <select\r\n              value={serviceType}\r\n              onChange={(e) => setServiceType(e.target.value)}\r\n              className=\"w-full p-2 border rounded\"\r\n            >\r\n              <option value=\"taxi\">Taxi</option>\r\n              <option value=\"food_delivery\">Food Delivery</option>\r\n              <option value=\"other\">Other</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block mb-2\">From</label>\r\n            <GeoapifyGeocoderAutocomplete\r\n              placeSelect={handleStartSelect}\r\n              placeholder=\"Start Location\"\r\n              className=\"w-full p-2 border rounded\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block mb-2\">To</label>\r\n            <GeoapifyGeocoderAutocomplete\r\n              placeSelect={handleEndSelect}\r\n              placeholder=\"End Location\"\r\n              className=\"w-full p-2 border rounded\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n          >\r\n            Place Order\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </GeoapifyContext>\r\n  );\r\n};\r\n\r\nexport default OrderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}